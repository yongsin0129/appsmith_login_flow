{
  "animateLoading": true,
  "borderOpacity": 100,
  "borderRadius": "0.375rem",
  "borderWidth": 1,
  "bottomRow": 107,
  "boxShadow": "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  "dynamicBindingPathList": [],
  "dynamicTriggerPathList": [],
  "flexVerticalAlignment": "start",
  "isLoading": false,
  "isVisible": true,
  "key": "jnlub8evk6",
  "leftColumn": 0,
  "mobileBottomRow": 102,
  "mobileLeftColumn": 1,
  "mobileRightColumn": 25,
  "mobileTopRow": 70,
  "needsErrorInfo": false,
  "originalBottomRow": 130,
  "originalTopRow": 70,
  "parentColumnSpace": 17.9375,
  "parentId": "k6ga7i8y7j",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "source": "https://www.example.com",
  "srcDoc": "<!DOCTYPE html>\n<html>\n<head>\n  <title>組織圖</title>\n  <script src=\"https://d3js.org/d3.v7.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/d3-org-chart@3.0.1\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/d3-flextree@2.1.2/build/d3-flextree.js\"></script>\n  <link rel=\"stylesheet\" href=\"///cdn.bootcdn.net/ajax/libs/zui/3.0.0/zui.css\">\n  <style>\n    .container {\n      width: 95%;\n      height: 90vh;\n\t\t\tpadding: 1rem;\n    }\n    .chart-container {\n      width: 95%;\n      height: 90vh;\n    }\n    .svg-chart-container {\n      width: 100%;\n      height: 90vh;    }\n\n    .loading {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      font-size: 24px;\n      color: #716E7B;\n    }\n    input {\n\t\t\tzoom: 125%;\n      border: solid 2.5px rgba(14, 165, 233, 1);\n      border-radius: 5px;\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"container\">\n\n    <div class=\"loading\">Loading...</div>\n    \n    <input type=\"search\" placeholder=\" 輸入姓名\" oninput=\"filterChart(event)\" />\n    <button type=\"button\" class=\"btn secondary size-md\" onclick=\"chart.expandAll().fit()\">Expand All</button>\n    <button type=\"button\" class=\"btn secondary size-md\" onclick=\"chart.collapseAll().fit()\">Collapse All</button>\n    <button type=\"button\" class=\"btn secondary size-md\" onclick=\"chart.fit()\">Fit to the Screen</button>\n    <div class=\"chart-container\"></div>\n  </div>\n\n  <script>\n    let chart;\n\n    function filterChart(e) {\n      const value = e.srcElement.value;\n      chart.clearHighlighting();\n      const data = chart.data();\n      data.forEach((d) => (d._expanded = false));\n      data.forEach((d) => {\n        if (value != '' && d.id.toLowerCase().includes(value.toLowerCase())) {\n          d._highlighted = true;\n          d._expanded = true;\n        }\n      });\n      chart.data(data).render().fit();\n    }\n\n    function renderChart(data) {\n\n      // 顯示 loading 標示\n      document.querySelector('.loading').style.display = 'block';\n\n      // D3 rendering\n      chart = new d3.OrgChart()\n        .nodeHeight((d) => 85 + 25)\n        .nodeWidth((d) => 220 + 2)\n        .childrenMargin((d) => 50)\n        .neighbourMargin((a, b) => 20)\n        .nodeContent(function (d, i, arr, state) {\n          const color = '#FFFFFF';\n          const imageDiffVert = 25 + 2;\n\n          // 使用 setTimeout 確保在繪製完成後隱藏 loading 標示\n          setTimeout(() => {\n            document.querySelector('.loading').style.display = 'none';\n            console.log(\"D3 rendering\")\n          }, 200); // 200 毫秒後隱藏 loading 標示\n\n          return `\n            <div style='width:${d.width}px;height:${d.height}px;padding-top:12px;padding-left:1px;padding-right:1px'>\n              <div style=\"font-family: 'Inter', sans-serif;background-color:${color};  margin-left:-1px;width:${d.width - 2}px;height:${d.height - imageDiffVert}px;border-radius:10px;border: 1px solid #E4E2E9;display:flex;flex-direction:column;align-items:center;justify-content:center\">\n                <div style=\"font-size:24px;color:#716E7B;margin-top:5px\">${d.data.id}</div>\n              </div>\n            </div>\n          `;\n        })\n        .container('.chart-container')\n        .data(data)\n        .render()\n\n    }\n\n    // 從 外部接收 接收數據\n    //add this code in your app that you've embedded in Appsmith using the Iframe widget\n    const messageHandler = (event) => {\n        //The message sent is available in the event object.\n        if(event) {\n        // Read the message by using the event.data property\n        const messageReceived = event.data;\n        \n        //Add code to manipulate the received message\n       renderChart(messageReceived)\n        }\n    };\n\n    //add the event listener to read the incoming message\n    window.addEventListener('message', messageHandler);\n\n  </script>\n  <script src=\"///cdn.bootcdn.net/ajax/libs/zui/3.0.0/zui.js\" crossorigin=\"anonymous\"></script>\n</body>\n</html>\n",
  "topRow": 49,
  "type": "IFRAME_WIDGET",
  "version": 1,
  "widgetId": "2sbpsyeevr",
  "widgetName": "Iframe_d3"
}